;;;;;;;;;;;;;;;;;;;;
;;; Core for economic dynamical ABM
;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;
;;
;; Distinction between intrinsic value and economic value ?
;;   -> in that case, make them independant, would have no sense the other case
;;   -> agents search to maximize intrinsic value but minimize economic (ie minimize rent), should work that way ?
;;
;;
;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;
;; globals:
;;  
;; rent-update-radius
;   mean-economic-value
;   sigma-wealth
;;  
;;
;;
;;
;;
;;;;;;;;;;;;;;;;

;;;;;;;;;;;
;; breeds and owned:
;;;;;;;;;;;

breed[households household]

households-own [
      ;;no need for pointer to the occupied place ?
      ;;wealth of same unit and scale than rent (to simplify)
       wealth 
]








;;setup for one single run (simple coupling)
to setup-ABM
  ;;;;;;;;
  ;;requires:
  ;;  - a distribution of values
  ;;  - corresponding network (i.e. the CA model has already run)
  ;;;;;;;
  
  setup-vars-ABM
  
  setup-rents
  
  
end

to setup-rents
  ;;uniform distribution of rents at the beginning ?
  ;; -> could be interesting to already associate rents to absolute values
  ask patches with [constructed?][
    set rent mean-economic-value 
  ]
end

to setup-vars-ABM
  ;;for now vars are fixed to avoid overparam
  ;;after brief exploration, should determine which vars have influence on qualitative difference in the outcome
  ;;and set them as sliders ?
  set rent-update-radius 5
  set mean-economic-value 1
  set sigma-wealth 0.3
  set move-threshold 1
end


;;go for one step (simple coupling)
to go-one-step-ABM
  ;;mobility for existing actors
  move-existing-actors
  
  ;;new immigrants
  add-incoming-actors
  
  ;;update rents
  update-rents
  
  ;;update wealths? Q of the time scale
  ;;do evolve at same speed than rents ?
  
  ;;display
  display-ABM
  
end

to move-existing-actors
  ;;household decide if moves
  ;;maximize value and maximize (wealth - rent)
  ;;moves are done in random order, should not have influence
  
  ;;rule for movement: economic balance / value > threshold
  let vmax max [value] of patches
  let movers households with [(wealth - [rent] of patch-here)* vmax /([value] of patch-here) > move-threshold]
  
  
end

to add-incoming-actors
  
end


to update-rents
  ;;update rule: mean of wealth and rents in radius (same as Moore neigh)
  
  ;;beware, need an intermediate var!
  ask patches with [constructed?][
    let neighborhood-inhabitants (households in-radius rent-update-radius)
    let neighborhood-patches (patches in-radius rent-update-radius) with [constructed?]
    ;;calculation of mean of wealth of neighbors and rents of neighbors patches by hand since it is mixed agentset
    ;;DIRTY
    let s 0 let n 0
    if neighborhood-inhabitants != nobody [ask neighborhood-inhabitants [set s s + wealth set n n + 1]]
    if neighborhood-patches != nobody [ask neighborhood-patches [set s s + rent set n n + 1]]
    set next-rent s / n
  ]
  ask patches with [constructed?][set rent next-rent]
end


